---
interface Props {
  buttonLabel?: string;
  subscriptionIntroText?: string;
  subscriptionUrlText?: string;
  copiedText?: string;
  filename?: string;
  anchorClass?: string;
  wrapperClass?: string;
  id?: string;
  ['aria-label']?: string;
  [key: string]: any;
}

const {
  buttonLabel = 'Descargar Calendario (.ics)',
  subscriptionIntroText = 'Para mantener tu calendario actualizado automáticamente, copia la siguiente URL y añádela como un nuevo calendario por suscripción en tu aplicación de calendario (Google Calendar, Outlook, Apple Calendar, etc.):',
  subscriptionUrlText = 'Copiar URL del Calendario',
  copiedText = '¡URL Copiada!',
  filename = 'cangascup2025.ics',
  anchorClass,
  wrapperClass,
  id,
  ...rest
} = Astro.props as Props;

const relativeCalendarUrl = '/calendar.ics';

const siteUrl = (Astro.site?.toString() || 'https://cangascup.es').replace(/\/$/, '');
const fullCalendarUrl = `${siteUrl}${relativeCalendarUrl}`;

const defaultAriaLabel = `Descargar archivo de calendario ${filename}`;
const ariaLabel = rest['aria-label'] || defaultAriaLabel;
delete rest['aria-label'];

const uniqueIdSuffix = Math.random().toString(36).substring(2, 7);
const copyButtonId = `copy-cal-url-btn-${uniqueIdSuffix}`;
const urlDisplayId = `cal-url-display-${uniqueIdSuffix}`;
---

<div class:list={['space-y-3 flex items-center flex-col p-2', wrapperClass]}>
  <a
    href={relativeCalendarUrl}
    download={filename}
    class:list={[
      'inline-block group focus:outline-none',
      'rounded-lg transition-all duration-200 ease-in-out',
      'focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-slate-900',
      anchorClass,
    ]}
    aria-label={ariaLabel}
    {...id ? { id } : {}}
    {...rest}
  >
    <div
      class:list={[
        'flex items-center gap-x-3',
        'bg-slate-700 text-slate-100',
        'group-hover:bg-slate-600 group-focus-visible:bg-slate-600',
        'px-4 py-3',
        'rounded-lg',
        'shadow-md group-hover:shadow-lg',
        'font-sans text-sm md:text-base',
        'transition-all duration-200 ease-in-out',
      ]}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="w-5 h-5 flex-shrink-0 text-indigo-400 group-hover:text-indigo-300 transition-colors duration-200 ease-in-out"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        aria-hidden="true"
        focusable="false"
      >
        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
        <line x1="16" y1="2" x2="16" y2="6"></line>
        <line x1="8" y1="2" x2="8" y2="6"></line>
        <line x1="3" y1="10" x2="21" y2="10"></line>
      </svg>
      <span class="truncate">{buttonLabel}</span>
    </div>
  </a>
  <div class="text-sm text-slate-300 p-3 bg-slate-800 rounded-md border border-slate-700 shadow">
    <p class="mb-2">{subscriptionIntroText}</p>
    <div class="flex items-center gap-2 bg-slate-900 p-2 rounded">
      <code id={urlDisplayId} class="text-indigo-400 break-all flex-grow">{fullCalendarUrl}</code>
      <button
        id={copyButtonId}
        type="button"
        class="px-3 py-1.5 text-xs font-medium text-white bg-indigo-600 rounded hover:bg-indigo-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-slate-900 transition-colors"
        aria-label={`Copiar la URL del calendario: ${fullCalendarUrl}`}
      >
        {subscriptionUrlText}
      </button>
    </div>
  </div>
</div>

<script
  define:vars={{
    copyButtonId,
    urlToCopy: fullCalendarUrl,
    originalButtonText: subscriptionUrlText,
    copiedText,
  }}
>
  const copyButton = document.getElementById(copyButtonId);

  if (copyButton) {
    copyButton.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(urlToCopy);
        copyButton.textContent = copiedText;
        copyButton.disabled = true;
        setTimeout(() => {
          copyButton.textContent = originalButtonText;
          copyButton.disabled = false;
        }, 2000);
      } catch (err) {
        console.error('Error al copiar la URL: ', err);
        alert('No se pudo copiar la URL. Por favor, cópiela manualmente.');
      }
    });
  }
</script>
