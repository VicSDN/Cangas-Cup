---
interface Props {
  /** El texto principal que se mostrará en el botón/enlace. */
  label?: string;
  /** El nombre de archivo para la descarga del .ics. */
  filename?: string;
  /** Clases CSS adicionales para el elemento <a> principal. */
  anchorClass?: string;
  /** Clases CSS adicionales para el div contenedor interno. */
  wrapperClass?: string;
  /** Un ID opcional para el elemento <a>, útil para aria-describedby u otras relaciones. */
  id?: string;
  /** Sobrescribe el aria-label por defecto del enlace. */
  ['aria-label']?: string;
  /** Permite pasar cualquier otro atributo HTML al elemento <a>. */
  [key: string]: any;
}

const {
  label = "¿Resultados en tu calendario?",
  filename = 'calendario-eventos.ics',
  anchorClass,
  wrapperClass,
  id,
  ...rest
} = Astro.props as Props;

const calendarUrl = '/calendar.ics';

const defaultAriaLabel = `Descargar ${filename} y añadir eventos al calendario: ${label}`;
const ariaLabel = rest['aria-label'] || defaultAriaLabel;
delete rest['aria-label'];
---

<a
  href={calendarUrl}
  download={filename}
  class:list={[
    "inline-block group focus:outline-none",
    "rounded-lg transition-all duration-200 ease-in-out",
    "focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-slate-900",
    anchorClass,
  ]}
  aria-label={ariaLabel}
  {...(id ? { id } : {})}
  {...rest}
>
  <div
    class:list={[
      "flex items-center gap-x-3",
      "bg-slate-700 text-slate-100",
      "group-hover:bg-slate-600 group-focus-visible:bg-slate-600",
      "px-4 py-3",
      "rounded-lg",
      "shadow-md group-hover:shadow-lg",
      "font-sans text-sm md:text-base",
      "transition-all duration-200 ease-in-out",
      wrapperClass,
    ]}
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="w-5 h-5 flex-shrink-0 text-indigo-400 group-hover:text-indigo-300 transition-colors duration-200 ease-in-out"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      aria-hidden="true"
      focusable="false"
    >
      <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
      <line x1="16" y1="2" x2="16" y2="6"></line>
      <line x1="8" y1="2" x2="8" y2="6"></line>
      <line x1="3" y1="10" x2="21" y2="10"></line>
    </svg>

    <span class="truncate">{label}</span>
  </div>
</a>
