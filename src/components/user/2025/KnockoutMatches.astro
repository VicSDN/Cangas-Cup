---
import { supabase } from '../../../lib/supabase';

export interface Props {
  year?: number;
}
const { year = 2025 } = Astro.props;

const KNOCKOUT_STAGES_ORDER = ['Octavos de Final', 'Cuartos de Final', 'Semifinal', 'Tercer Puesto', 'Final'];

type MatchDisplay = {
  id: number;
  home_team_name: string;
  away_team_name: string;
  home_score: number | null;
  away_score: number | null;
  match_date_formatted: string;
  match_time_formatted: string;
  round_name: string | null;
  match_stage: string;
};

let matchesByStage: Record<string, MatchDisplay[]> = {};
let errorMessage: string | null = null;
let orderedStagesWithMatches: string[] = [];

try {
  const { data: rawMatches, error } = await supabase
    .from('tournament_match')
    .select(`
      id,
      home_team_data:tournament_team!tournament_match_home_team_fkey(id, name),
      away_team_data:tournament_team!tournament_match_away_team_fkey(id, name),
      home_score,
      away_score,
      match_date,
      round_name,
      match_stage
    `)
    .eq('year', year)
    .in('match_stage', KNOCKOUT_STAGES_ORDER)
    .eq('is_local_final', false)
    .order('match_date', { ascending: true })
    .order('id', { ascending: true });

  if (error) throw new Error(`Error al cargar partidos de eliminatoria: ${error.message}`);
  
  if (rawMatches && rawMatches.length > 0) {
    rawMatches.forEach(match => {
      matchesByStage[match.match_stage] = matchesByStage[match.match_stage] || [];
      const date = new Date(match.match_date);

      const homeTeamDataObject = match.home_team_data as unknown as ({ id: number; name: string } | null);
      const home_team_name = homeTeamDataObject ? homeTeamDataObject.name : 'Por definir';

      const awayTeamDataObject = match.away_team_data as unknown as ({ id: number; name: string } | null);
      const away_team_name = awayTeamDataObject ? awayTeamDataObject.name : 'Por definir';

      matchesByStage[match.match_stage].push({
        id: match.id,
        home_team_name: home_team_name,
        away_team_name: away_team_name,
        home_score: match.home_score,
        away_score: match.away_score,
        match_date_formatted: date.toLocaleDateString('es-ES', { day: '2-digit', month: 'short', year: 'numeric' }),
        match_time_formatted: date.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit', hour12: false }),
        round_name: match.round_name,
        match_stage: match.match_stage,
      });
    });
    orderedStagesWithMatches = KNOCKOUT_STAGES_ORDER.filter(stage => matchesByStage[stage] && matchesByStage[stage].length > 0);
  }

} catch (e: any) {
  errorMessage = e.message || "No se pudieron cargar los partidos de eliminatoria.";
}
---

<div class="bg-slate-800 rounded-xl shadow-xl overflow-hidden">
  <div class="p-5 md:p-6 bg-gradient-to-r from-indigo-700 to-indigo-600">
    <h2 class="text-xl md:text-2xl font-bold text-white text-center">Partidos de Eliminatoria ({year})</h2>
  </div>

  {errorMessage && (
    <div class="m-4 p-4 bg-red-900/80 border border-red-700 text-red-300 rounded-lg">
      <p class="font-semibold">Error:</p>
      <p>{errorMessage}</p>
    </div>
  )}

  {!errorMessage && orderedStagesWithMatches.length > 0 && (
    <div class="p-4 md:p-6 space-y-8">
      {orderedStagesWithMatches.map(stage => (
        <section>
          <h3 class="text-xl font-semibold mb-4 text-indigo-400 border-b-2 border-indigo-800 pb-2">{stage}</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {matchesByStage[stage].map(match => (
              <article class="p-4 bg-slate-700 rounded-lg shadow-md border border-slate-600 hover:shadow-slate-900/30 hover:border-slate-500 transition-all duration-200">
                {match.round_name && (<p class="text-xs text-slate-400 mb-1 font-medium">{match.round_name}</p>)}
                <div class="flex items-center justify-between mb-2 text-sm">
                  <span class="font-semibold text-slate-200 truncate w-2/5 text-right pr-2" title={match.home_team_name}>{match.home_team_name}</span>
                  {match.home_score !== null && match.away_score !== null ? (
                    <span class="text-lg font-bold text-indigo-300 px-2.5 py-1 bg-indigo-700/50 rounded-md shadow-sm">
                      {match.home_score} - {match.away_score}
                    </span>
                  ) : (
                    <span class="text-md font-bold text-slate-500 px-2">vs</span>
                  )}
                  <span class="font-semibold text-slate-200 truncate w-2/5 text-left pl-2" title={match.away_team_name}>{match.away_team_name}</span>
                </div>
                <p class="text-xs text-center text-slate-400">{match.match_date_formatted} • {match.match_time_formatted} hs</p>
              </article>
            ))}
          </div>
        </section>
      ))}
    </div>
  )}
  {!errorMessage && orderedStagesWithMatches.length === 0 && (
    <p class="p-6 text-center text-slate-500">No hay partidos de eliminatoria programados para el año {year}.</p>
  )}
</div>