---
import { supabase } from '../../../lib/supabase';

const { data: rankings, error } = await supabase
  .from('view_group_ranking_ordered')
  .select('*')
  .order('group_name', { ascending: true })
  .order('position_in_group', { ascending: true });

if (error) throw error;

// Obtener lista única de grupos
const groupNames = [...new Set(rankings.map(r => r.group_name))];

// Definir tabs con grupos dinámicos
const tabs = {
  Clasificación: groupNames,
  Goleadores: ['Todos', 'Por grupo', 'Por equipo'],
  Amarillas: [],
  Rojas: [],
} as const;

type TabKey = keyof typeof tabs;

const rawTab = Astro.url.searchParams.get('tab');
const currentTab: TabKey = (Object.keys(tabs) as TabKey[]).includes(rawTab as TabKey)
  ? (rawTab as TabKey)
  : 'Clasificación';

const rawSubtab = Astro.url.searchParams.get('subtab');

const currentSubtab =
  rawSubtab && Array.isArray(tabs[currentTab]) && tabs[currentTab].includes(rawSubtab as any)
    ? rawSubtab
    : tabs[currentTab][0] || null;


// Simulación de datos de goleadores
const goleadores = [
  { jugador: 'Jugador 1', equipo: 'Equipo 1', goles: 5, grupo: 'A' },
  { jugador: 'Jugador 2', equipo: 'Equipo 2', goles: 4, grupo: 'A' },
  { jugador: 'Jugador 3', equipo: 'Equipo 5', goles: 3, grupo: 'B' },
];
---

<nav class="flex flex-col items-center bg-black text-white p-4">
  <!-- Tabs principales -->
  <div class="flex gap-4 mb-2 flex-wrap justify-center">
    {Object.keys(tabs).map(tab => (
      <a
        href={`?tab=${tab}`} 
        class={`px-3 py-1 rounded ${currentTab === tab ? 'bg-white text-black font-bold' : 'hover:bg-gray-700'}`}
      >
        {tab}
      </a>
    ))}
  </div>

  <!-- Subtabs dinámicos -->
  {tabs[currentTab]?.length > 0 && (
    <div class="flex gap-2 mb-4 flex-wrap justify-center">
      {tabs[currentTab].map(subtab => (
        <a
          href={`?tab=${currentTab}&subtab=${subtab}`}
          class={`px-2 py-1 rounded text-sm border ${
            currentSubtab === subtab
              ? 'bg-white text-black font-semibold'
              : 'hover:bg-gray-700'
          }`}
        >
          {subtab}
        </a>
      ))}
    </div>
  )}
</nav>

<!-- Contenido dinámico -->
<div class="p-4 text-black">
  {currentTab === 'Clasificación' && currentSubtab && (
    <div>
      <h2 class="text-xl font-bold mb-2">Grupo {currentSubtab}</h2>
      {rankings
        .filter(row => row.group_name === currentSubtab)
        .map(row => (
          <div class="border-b py-2 flex justify-between">
            <span>{row.team_name}</span>
            <span>{row.points} pts</span>
          </div>
        ))}
    </div>
  )}

  {currentTab === 'Goleadores' && (
    <div>
      <h2 class="text-xl font-bold mb-2">Goleadores - {currentSubtab}</h2>

      {currentSubtab === 'Todos' && (
        <ul class="list-disc pl-5">
          {goleadores
            .sort((a, b) => b.goles - a.goles)
            .map(g => (
              <li>{g.jugador} - {g.equipo} ({g.goles} goles)</li>
            ))}
        </ul>
      )}

      {currentSubtab === 'Por grupo' && (
        <>
          {groupNames.map(grupo => (
            <div class="mb-2">
              <h3 class="font-semibold">Grupo {grupo}</h3>
              <ul class="list-disc pl-5">
                {goleadores
                  .filter(g => g.grupo === grupo)
                  .map(g => (
                    <li>{g.jugador} - {g.equipo} ({g.goles} goles)</li>
                  ))}
              </ul>
            </div>
          ))}
        </>
      )}

      {currentSubtab === 'Por equipo' && (
        <>
          {[...new Set(goleadores.map(g => g.equipo))].map(equipo => (
            <div class="mb-2">
              <h3 class="font-semibold">{equipo}</h3>
              <ul class="list-disc pl-5">
                {goleadores
                  .filter(g => g.equipo === equipo)
                  .map(g => (
                    <li>{g.jugador} ({g.goles} goles)</li>
                  ))}
              </ul>
            </div>
          ))}
        </>
      )}
    </div>
  )}

  {(currentTab === 'Amarillas' || currentTab === 'Rojas') && (
    <p class="text-gray-700">Aquí puedes mostrar estadísticas de tarjetas.</p>
  )}
</div>
