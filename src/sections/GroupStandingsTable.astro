---
import type { RankingEntry } from '../types/tournament';

export interface Props {
  groupName: string;
  standings: RankingEntry[];
  highlightTeamId?: number | null;
  isAdminView?: boolean;
}

const { groupName, standings, highlightTeamId = null, isAdminView = false } = Astro.props;

const getRowClass = (teamId: number) => {
  if (highlightTeamId && teamId === highlightTeamId) {
    return "bg-indigo-100 dark:bg-indigo-900/60 font-semibold";
  }
  return "hover:bg-gray-50 dark:hover:bg-gray-700/50";
};
---

<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl overflow-hidden">
  <h3 class="text-xl font-semibold p-4 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-white border-b dark:border-gray-600">
    Clasificación {groupName}
  </h3>
  {standings && standings.length > 0 ? (
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
        <thead class="bg-gray-50 dark:bg-gray-700/50">
          <tr>
            <th scope="col" class="px-3 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider w-12">Pos</th>
            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Equipo</th>
            <th scope="col" class="px-3 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">PJ</th>
            <th scope="col" class="px-3 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Pts</th>
            <th scope="col" class="px-3 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">GF</th>
            <th scope="col" class="px-3 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">GC</th>
            <th scope="col" class="px-3 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">DG</th>
          </tr>
        </thead>
        <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600">
          {standings.map((team) => (
            <tr class={`${getRowClass(team.team_id)} transition-colors duration-150`}>
              <td class="px-3 py-3 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300 text-center">{team.position_in_group}º</td>
              <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-900 dark:text-white">
                {isAdminView ? (
                  <a href={`/admin/teams/${team.team_id}?year=${team.year}`} class="hover:text-indigo-600 dark:hover:text-indigo-400">
                    {team.team_name}
                  </a>
                ) : (
                  <span>{team.team_name}</span>
                )}
                {team.is_local && <span class="ml-2 text-xs bg-blue-100 text-blue-700 dark:bg-blue-700 dark:text-blue-200 px-1.5 py-0.5 rounded-full">Local</span>}
              </td>
              <td class="px-3 py-3 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300 text-center">{team.games_played}</td>
              <td class="px-3 py-3 whitespace-nowrap text-sm text-gray-900 dark:text-white font-bold text-center">{team.points}</td>
              <td class="px-3 py-3 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300 text-center">{team.overall_goals_for}</td>
              <td class="px-3 py-3 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300 text-center">{team.goals_against}</td>
              <td class="px-3 py-3 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300 text-center">{team.overall_goal_difference}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  ) : (
    <p class="p-4 text-sm text-gray-500 dark:text-gray-400">No hay datos de clasificación disponibles para este grupo.</p>
  )}
</div>