---
import LayoutAdmin from '../../../layouts/LayoutAdmin.astro';
import ButtonBack from '../../../sections/ButtonBack.astro';
---

<LayoutAdmin description="La plataforma del Administrador" title="Añadir Nuevo Equipo">
  <ButtonBack />
  <section
    class="max-w-4xl mt-14 lg:mt-28 p-6 mx-auto bg-white rounded-md shadow-md dark:bg-gray-800"
  >
    <h2 class="text-lg font-semibold text-gray-700 capitalize dark:text-white">Datos de Equipo</h2>
    <h2>Añadir nuevo equipo</h2>

    <div id="toast-container" class="fixed top-4 right-4 z-50 flex flex-col gap-2 w-80"></div>

    <div
      id="error-panel"
      class="hidden mb-4 p-4 rounded-md bg-red-100 border border-red-400 text-red-700"
    >
      <h3 class="font-bold">Error</h3>
      <p id="error-message" class="mt-1"></p>
    </div>
    <form id="add-team-form" class="space-y-4">
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300"
          >Nombre del equipo:</label
        >
        <input
          type="text"
          name="name"
          id="name"
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          placeholder="Nombre del equipo"
          required
        />
      </div>
      <div>
        <label for="group_letter" class="block text-sm font-medium text-gray-700 dark:text-gray-300"
          >Letra del Grupo (A, B, C...):</label
        >
        <input
          type="text"
          name="group_letter"
          id="group_letter"
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          placeholder="Ej: A"
          maxlength="1"
          pattern="[A-Za-z]"
          title="Introduce una única letra para el grupo (A-Z)."
          required
        />
      </div>
      <div>
        <label for="location" class="block text-sm font-medium text-gray-700 dark:text-gray-300"
          >Localización:</label
        >
        <select
          name="location"
          id="location"
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          required
        >
          <option value="">-- Selecciona una opción --</option>
          <option value="Local">Local</option>
          <option value="Regional">Regional</option>
          <option value="Nacional">Nacional</option>
        </select>
      </div>
      <div>
        <label for="year" class="block text-sm font-medium text-gray-700 dark:text-gray-300"
          >Año:</label
        >
        <input
          type="number"
          name="year"
          id="year"
          value="2025"
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          placeholder="Año"
          min="2000"
          max="2100"
          required
        />
      </div>
      <button
        type="submit"
        class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
      >
        Añadir equipo
      </button>
    </form>
  </section>
</LayoutAdmin>

<script>
  function showToast(message: string, type: 'error' | 'success' = 'error', details: string = '') {
    const toastContainer = document.getElementById('toast-container');
    if (!toastContainer) return;

    const toast = document.createElement('div');
    toast.className = `p-4 rounded-md shadow-md max-w-xs ${type === 'success' ? 'bg-green-500' : 'bg-red-500'} text-white`;

    const messageEl = document.createElement('div');
    messageEl.className = 'font-bold';
    messageEl.textContent = message;
    toast.appendChild(messageEl);

    if (details) {
      const detailsEl = document.createElement('div');
      detailsEl.className = 'text-sm mt-1';
      detailsEl.textContent = details;
      toast.appendChild(detailsEl);
    }

    const closeBtn = document.createElement('button');
    closeBtn.className = 'absolute top-1 right-1 text-white hover:text-gray-200';
    closeBtn.innerHTML = '×';
    closeBtn.style.background = 'none';
    closeBtn.style.border = 'none';
    closeBtn.style.fontSize = '1.2rem';
    closeBtn.style.lineHeight = '1';
    closeBtn.onclick = () => toast.remove();
    toast.appendChild(closeBtn);

    toast.style.position = 'relative';

    toastContainer.appendChild(toast);

    setTimeout(() => {
      if (toast.parentElement) {
        toast.classList.add('opacity-0', 'transition-opacity', 'duration-500');
        setTimeout(() => {
          if (toast.parentElement) toast.remove();
        }, 500);
      }
    }, 5000);
  }

  const form = document.getElementById('add-team-form') as HTMLFormElement;
  const errorPanel = document.getElementById('error-panel');
  const errorMessageElement = document.getElementById('error-message');

  function displayError(message: string) {
    if (errorPanel && errorMessageElement) {
      errorPanel.classList.remove('hidden');
      errorMessageElement.textContent = message;
    }
  }

  function hideError() {
    if (errorPanel) {
      errorPanel.classList.add('hidden');
    }
  }

  if (form) {
    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      hideError();

      const formData = new FormData(form);
      const name = formData.get('name')?.toString().trim();
      const groupLetterInput = formData.get('group_letter')?.toString().toUpperCase().trim(); // Get letter
      const yearString = formData.get('year')?.toString();
      const location = formData.get('location')?.toString().trim();

      let groupIdNumeric = -1;
      if (!groupLetterInput || groupLetterInput.length !== 1 || !/^[A-Z]$/.test(groupLetterInput)) {
        const msg = 'La letra del grupo debe ser una única letra (A-Z).';
        showToast('Validación fallida', 'error', msg);
        displayError(msg);
        return;
      } else {
        groupIdNumeric = groupLetterInput.charCodeAt(0) - 'A'.charCodeAt(0) + 1;
      }
      const year = parseInt(yearString || '0', 10);
      if (isNaN(year) || year < 2000 || year > 2100) {
        const msg = 'El año no es válido. Debe ser un número entre 2000 y 2100.';
        showToast('Validación fallida', 'error', msg);
        displayError(msg);
        return;
      }

      if (!name || groupIdNumeric <= 0 || !location || location === '') {
        const msg = 'Por favor, rellene todos los campos correctamente.';
        showToast('Validación fallida', 'error', msg);
        displayError(msg);
        return;
      }

      const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      const originalButtonText = submitButton.textContent;

      try {
        submitButton.disabled = true;
        submitButton.textContent = 'Guardando...';

        const response = await fetch('/api/add-team', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ name, group_id: groupIdNumeric, year, location }),
          credentials: 'include',
        });

        const result = await response.json();

        if (!response.ok) {
          const errorMsg = result.details || result.error || 'Error al añadir el equipo';
          displayError(errorMsg);
          showToast('Error', 'error', errorMsg);
        } else {
          showToast('¡Éxito!', 'success', 'Equipo añadido correctamente');
          form.reset();
          const yearInput = document.getElementById('year') as HTMLInputElement;
          if (yearInput) {
            yearInput.value = '2025';
          }
          const locationSelect = document.getElementById('location') as HTMLSelectElement;
          if (locationSelect) locationSelect.value = '';
        }
      } catch (error) {
        console.error('Error al insertar equipo:', error);
        const errorMsg =
          error instanceof Error
            ? error.message
            : 'Error desconocido al añadir el equipo. Revisa la consola.';
        showToast('Error crítico', 'error', errorMsg);
        displayError(errorMsg);
      } finally {
        submitButton.disabled = false;
        submitButton.textContent = originalButtonText;
      }
    });
  } else {
    console.error('Formulario no encontrado');
  }
</script>
